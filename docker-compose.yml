services:
  nginx:
    container_name: app_container
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./src/laravel:/var/www/html"
    depends_on:
      - db
      - php
    networks:
      - docker-network
      - docker-testing-network

  db:
      image: bitnami/postgresql:16.3.0
      platform: linux/amd64
      shm_size: 1024mb
      ports:
          - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
      restart: always
      volumes:
          - db-data:/bitnami/postgresql
          - ./init-db:/docker-entrypoint-initdb.d
      environment:
          - POSTGRES_DATABASE=${POSTGRES_DATABASE}
          - POSTGRES_USERNAME=${POSTGRES_USERNAME}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
          - docker-network

  db_test:
      image: bitnami/postgresql:16.3.0
      platform: linux/amd64
      shm_size: 64mb
      ports:
          - "${POSTGRES_TEST_OUTER_PORT}:${POSTGRES_TEST_INNER_PORT}"
      restart: always
      volumes:
          - db-data2:/bitnami/postgresql
          - ./init-db:/docker-entrypoint-initdb.d
      environment:
          - POSTGRES_DATABASE=${DB_TEST_DATABASE}
          - POSTGRES_USERNAME=${DB_TEST_USERNAME}
          - POSTGRES_PASSWORD=${DB_TEST_PASSWORD}
      networks:
          - docker-testing-network

  php:
    user: "${USERID}:${GROUPID}"
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - "./src/laravel:/var/www/html"
      - "/var/www/html/node_modules"
      - "./php/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    networks:
      - docker-network
      - docker-testing-network
    environment:
      XDEBUG_MODE: coverage

  composer:
    user: "${USERID}:${GROUPID}"
    build:
      context: .
      dockerfile: composer.dockerfile
    volumes:
        - "./src/laravel:/var/www/html"
    working_dir: "/var/www/html"
    networks:
        - docker-network
        - docker-testing-network

  npm:
    image: node:latest
    volumes:
        - "./src/laravel:/var/www/html"
    entrypoint: ["npm"]
    working_dir: "/var/www/html"
    depends_on:
      - php
      - nginx
    networks:
        - docker-network
        - docker-testing-network

  chrome:
    image: selenium/standalone-chromium:latest
    shm_size: 1g
    container_name: chrome_container
    ports:
      - "4444:4444"
      - "5900:5900"
      - "7900:7900"
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - php
      - nginx
    networks:
      - docker-testing-network


  elasticsearch:
    image: elasticsearch:7.17.28
    container_name: elasticsearch
    depends_on:
      - nginx
    ports:
      - "${ES_OUTER_PORT}:${ES_INNER_PORT}"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - indices.query.bool.max_clause_count=${ES_MAX_CLAUSE_COUNT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data-standalone:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${ES_OUTER_PORT}"]
      interval: 60s
      timeout: 10s
      retries: 5
    networks:
      - docker-network
      - docker-testing-network

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.28
#    container_name: kibana
#    volumes:
#      - kibana_data:/usr/share/kibana/data
#    depends_on:
#      - elasticsearch
#    environment:
#      - ELASTICSEARCH_HOSTS=${ES_HOSTS}
#      - NODE_OPTIONS=--max-old-space-size=1024
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
#    mem_limit: 1g
#    ports:
#      - "${KIBANA_OUTER_PORT}:${KIBANA_INNER_PORT}"
#    networks:
#      - docker-network
#      - docker-testing-network

  centrifugo:
    container_name: centrifugo
    image: centrifugo/centrifugo:v6
    volumes:
      - "./config.json:/centrifugo/config.json"
    command: centrifugo -c config.json
    depends_on:
      - php
      - nginx
    ports:
      - "${CENT_OUTER_PORT}:${CENT_INNER_PORT}"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - docker-network
      - docker-testing-network

volumes:
    db-data:
    db-data2:
    data-standalone:
    kibana_data:
        driver: local

networks:
    docker-network:
    docker-testing-network:
        driver: bridge
